on:
  github:
    push:
      if: ${{ event.git.branch != 'main' }}
      init:
        commit-sha: ${{ event.git.sha }}
        ref: ${{ event.git.ref }}

concurrency-pools:
  - id: rwx-cloud/cli:ci-${{ init.ref }}
    capacity: 1
    on-overflow: cancel-running

base:
  os: ubuntu 24.04
  tag: 1.2

tasks:
  - key: code
    call: git/clone 1.6.10
    with:
      preserve-git-dir: true
      repository: https://github.com/rwx-cloud/cli.git
      ref: ${{ init.commit-sha }}
      github-access-token: ${{ github['rwx-cloud'].token }}

  - key: tool-versions
    use: code
    call: rwx/tool-versions 1.0.4
    filter:
      - .tool-versions

  - key: go-installation
    call: golang/install 1.1.4
    with:
      go-version: ${{ tasks.tool-versions.values.golang }}

  - key: go
    use: go-installation
    run: echo "$(go env GOPATH)/bin" > "${MINT_ENV}/PATH"

  - key: golangci-lint
    use: go
    run: |
      curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sudo sh -s -- -b /usr/local/bin v${{ tasks.tool-versions.values.golangci-lint }}

  - key: go-deps
    use: [code, go]
    run: go mod download
    filter:
      - go.mod
      - go.sum

  - key: gotestsum
    use: go
    run: go install gotest.tools/gotestsum@latest

  - key: git
    run: |
      sudo apt-get update
      sudo apt-get install git git-lfs
      sudo apt-get clean

      git config --global user.name "Testing"
      git config --global user.email "git@example.com"
      git config --global init.defaultBranch main

      git lfs install --skip-repo

  - key: unit-tests
    use: [go-deps, rwx-cli, gotestsum, git]
    run: |
      gotestsum \
        --jsonfile tmp/go-test.json \
        -- \
        -ldflags "-w -s -X github.com/rwx-cloud/cli/cmd/rwx/config.Version=testing-${{ init.commit-sha }}" \
        -parallel 4 \
        ./internal/... ./cmd/... ./test/...
    outputs:
      test-results:
        - path: tmp/go-test.json

  - key: rwx-cli
    use: go-deps
    run: go build -a -ldflags "-w -s -X github.com/rwx-cloud/cli/cmd/rwx/config.Version=testing-${{ init.commit-sha }}" ./cmd/rwx

  - key: integration-tests
    use: rwx-cli
    run: ./rwx run --debug -f test/hello-world.mint.yaml
    env:
      RWX_ACCESS_TOKEN: ${{ secrets.RWX_ACCESS_TOKEN }}

  - key: lint
    use: [golangci-lint, go-deps]
    run: golangci-lint run ./...

  - key: go-mod-tidy
    use: go-deps
    run: |
      go mod tidy
      git diff --exit-code

  - key: rwx-testing-code
    call: git/clone 1.6.10
    with:
      path: ./rwx-testing
      repository: https://github.com/rwx-cloud/rwx-testing.git
      ref: main
      github-access-token: ${{ github['rwx-cloud'].token }}

  - key: jq
    run: |
      sudo apt-get update
      sudo apt-get install jq
      sudo apt-get clean

  - key: run-rwx-testing-tests
    use: [rwx-testing-code, jq, rwx-cli]
    run: |
      initiate_run_result=$(./rwx run --json --file ./rwx-testing/.mint/trigger-integration-test.yml --init 'grep=@cli' --init ref=main --init cli=${{ init.commit-sha }})
      echo "${initiate_run_result}"
      run_id=$(echo "${initiate_run_result}" | jq -r ".RunId")

      while true; do
        response=$(curl -H "Authorization: Bearer ${RWX_ACCESS_TOKEN}" -s -o response.json --http1.1 -w "%{http_code}" "https://cloud.rwx.com/mint/api/runs/${run_id}")

        if [ "$response" -ne 200 ]; then
          echo "Error: Cloud server returned unexpected status ${response} when polling run"
          exit 1
        fi

        execution_status=$(jq -r .run_status.execution response.json)
        result_status=$(jq -r .run_status.result response.json)

        echo "Execution status: ${execution_status}"
        echo "Result status: ${result_status}"

        case $execution_status in
          "waiting")
            echo "Retrying in 5 seconds..."
            sleep 5
            ;;
          "in_progress")
            echo "Retrying in 5 seconds..."
            sleep 5
            ;;
          "aborted")
            exit 1
            ;;
          "finished")
            case $result_status in
              "failed")
                exit 1
                ;;
              "succeeded")
                exit 0
                ;;
              *)
                exit 1
                ;;
            esac
            ;;
          *)
            exit 1
            ;;
        esac
      done
    env:
      RWX_ACCESS_TOKEN: ${{ secrets.RWX_ACCESS_TOKEN }}
    filter:
      - rwx
      - rwx-testing/.mint/trigger-integration-test.yml
